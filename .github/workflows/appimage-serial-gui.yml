name: AppImage (GUI/Serial)

on:
  push:
    branches:
    - develop
    - release/*

jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Prerequisties
      run: |
        sudo apt-get install bison libfreetype6-dev libftgl-dev ninja-build
        sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-xenial -y
        sudo apt-get update -q
        sudo apt-get install qt512base -y
    - name: Build (CMake/Ninja)
      run: |
        QT_BASE_DIR=/opt/qt512
        export QTDIR=$QT_BASE_DIR
        export PATH=$QT_BASE_DIR/bin:$PATH
        export LD_LIBRARY_PATH=$QT_BASE_DIR/lib/x86_64-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
        mkdir build
        cd build
        cmake -G "Ninja" -DGUI:bool=true ../
        ninja
        cd ../
    - name: Create AppImages
      run: |
        QT_BASE_DIR=/opt/qt512
        export QTDIR=$QT_BASE_DIR
        export PATH=$QT_BASE_DIR/bin:$PATH
        wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/build-appimage.sh -O build-appimage.sh
        chmod u+x build-appimage.sh
        ./build-appimage.sh -a Dissolve -v continuous -b build/dissolve
        ./build-appimage.sh -a Dissolve-GUI -v continuous -b build/dissolve-gui
    - name: Upload Artifacts (1/2)
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: artifacts
        path: *.AppImage
    - name: Upload Artifacts (2/2)
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: Dissolve-GUI-continuous-x86_64.AppImage
        path: Dissolve-GUI-continuous-x86_64.AppImage
  createrelease:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'release')
    needs: build
    env:
      DISSOLVE_VERSION: X.Y.Z
    steps:
    - name: Detect Version
      run: |
        $DISSOLVE_VERSION=`grep "DISSOLVEVERSION" src/version.h | sed "s/.*\"\(.*\)\"/\1/g"`
        echo "Code version detected as: $DISSOLVE_VERSION"
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Version ${{ github.ref }}
        bodyFile: Recent.md
        draft: false
        prerelease: false
    - name: Download Artifacts (1/2)
      uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Download Artifacts (2/2)
      uses: actions/download-artifact@v1
      with:
        name: Dissolve-GUI-continuous-x86_64.AppImage
    - name: Rename Artifacts
      run: |
        mv -v artifacts/Dissolve-continuous-x86_64.AppImage Dissolve-${DISSOLVE_VERSION}-x86_64.AppImage
        mv -v artifacts/Dissolve-GUI-continuous-x86_64.AppImage Dissolve-GUI-${DISSOLVE_VERSION}-x86_64.AppImage
    - name: Upload Release Assets (1/2)
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./
        asset_name: Dissolve-${{ env.DISSOLVE_VERSION }}-x86_64.AppImage
        asset_content_type: application/appimage
    - name: Upload Release Assets (2/2)
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./
        asset_name: Dissolve-GUI-${{ env.DISSOLVE_VERSION }}-x86_64.AppImage
        asset_content_type: application/appimage
  createcontinuous:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: contains(github.ref, 'develop')
    steps:
    - name: Create Continuous Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: continuous/${{ github.sha }}
        release_name: Continuous Build
        bodyFile: Continuous build of Dissolve from the develop branch.
        draft: false
        prerelease: true
    - name: Download Artifacts (1/2)
      uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Download Artifacts (2/2)
      uses: actions/download-artifact@v1
      with:
        name: Dissolve-GUI-continuous-x86_64.AppImage
        path: Dissolve-GUI-continuous-x86_64.AppImage
    - name: Upload Release Assets (1/2)
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts
        asset_name: Dissolve-continuous-x86_64.AppImage
        asset_content_type: application/appimage
    - name: Upload Release Assets (2/2)
      uses: actions/upload-release-asset@v1.0.1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts
        asset_name: Dissolve-GUI-continuous-x86_64.AppImage
        asset_content_type: application/appimage
    - name: Prune Outdated
      run: ./ci/scripts/prune_continuous.sh -r trisyoungs/dissolve
