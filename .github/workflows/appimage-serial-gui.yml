name: AppImage (GUI/Serial)

on:
  push:
    branches:
    - develop
    - master

jobs:
  prepcontinuous:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: contains(github.ref, 'develop')
    steps:
    - uses: actions/checkout@v1
    - name: Create Continuous Release
      run: |
        SHORTHASH=`git rev-parse --short HEAD`
        ./ci/scripts/update-release -r ${{ github.repository }} -t continuous/${SHORTHASH} -n "Continuous Build (${SHORTHASH})" -b 'Continuous release from current `develop` branch.' -p
    - name: Prune Outdated
      run: ./ci/scripts/prune-continuous -r trisyoungs/dissolve
  preprelease:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DISSOLVE_VERSION: X.Y.Z
    if: contains(github.ref, 'master')
    steps:
    - uses: actions/checkout@v1
    - name: Detect Version
      run: |
        DISSOLVE_VERSION=`grep "DISSOLVEVERSION" src/version.h | sed "s/.*\"\(.*\)\"/\1/g"`
        echo "Code version detected as: $DISSOLVE_VERSION"
    - name: Create Versioned Release
      run: |
        ./ci/scripts/update-release -r ${{ github.repository }} -t ${DISSOLVE_VERSION} -n "Version ${DISSOLVE_VERSION}" -f Recent.md
  build:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Prerequisties
      run: |
        sudo apt-get install bison libfreetype6-dev libftgl-dev ninja-build
        sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-xenial -y
        sudo apt-get update -q
        sudo apt-get install qt512base -y
    - name: Build (CMake/Ninja)
      run: |
        QT_BASE_DIR=/opt/qt512
        export QTDIR=$QT_BASE_DIR
        export PATH=$QT_BASE_DIR/bin:$PATH
        export LD_LIBRARY_PATH=$QT_BASE_DIR/lib/x86_64-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
        mkdir build
        cd build
        cmake -G "Ninja" -DGUI:bool=true ../
        ninja
        cd ../
    - name: Create AppImages
      run: |
        QT_BASE_DIR=/opt/qt512
        export QTDIR=$QT_BASE_DIR
        export PATH=$QT_BASE_DIR/bin:$PATH
        wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/build-appimage.sh -O build-appimage.sh
        chmod u+x build-appimage.sh
        ./build-appimage.sh -a Dissolve -v continuous -b build/dissolve
        ./build-appimage.sh -a Dissolve-GUI -v continuous -b build/dissolve-gui
        mkdir appimages
        mv Dissolve-continuous-x86_64.AppImage appimages
        mv Dissolve-GUI-continuous-x86_64.AppImage appimages
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: artifacts
        path: appimages/
  updaterelease:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')
    needs: build
    env:
      DISSOLVE_VERSION: X.Y.Z
    steps:
    - uses: actions/checkout@v1
    - name: Detect Version
      run: |
        DISSOLVE_VERSION=`grep "DISSOLVEVERSION" src/version.h | sed "s/.*\"\(.*\)\"/\1/g"`
        echo "Code version detected as: $DISSOLVE_VERSION"
    - name: Download Artifacts
      uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Rename Artifacts
      run: |
        mv -v artifacts/Dissolve-continuous-x86_64.AppImage Dissolve-${DISSOLVE_VERSION}-x86_64.AppImage
        mv -v artifacts/Dissolve-GUI-continuous-x86_64.AppImage Dissolve-GUI-${DISSOLVE_VERSION}-x86_64.AppImage
    - name: Update Versioned Release
      run: ./ci/scripts/update-release -r ${{ github.repository }} -t ${DISSOLVE_VERSION} -n "Version ${DISSOLVE_VERSION}" -f Recent.md artifacts/*AppImage
  updatecontinuous:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: contains(github.ref, 'develop')
    steps:
    - uses: actions/checkout@v1
    - name: Download Artifacts
      uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Update Continuous Release
      run: |
        SHORTHASH=`git rev-parse --short HEAD`
        ./ci/scripts/update-release -r ${{ github.repository }} -t continuous/${SHORTHASH} -n "Continuous Build (${SHORTHASH})" -b 'Continuous release from current `develop` branch.' -p artifacts/*AppImage
