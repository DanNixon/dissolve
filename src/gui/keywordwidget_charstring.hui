/*
	*** Keyword Widget - CharString
	*** src/gui/keywordwidget_charstring.hui
	Copyright T. Youngs 2012-2017

	This file is part of DUQ.

	DUQ is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	DUQ is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with DUQ.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef DUQ_KEYWORDWIDGETCHARSTRING_H
#define DUQ_KEYWORDWIDGETCHARSTRING_H

#include "module/keywordtypes/charstring.h"
#include <QComboBox>

// Forward Declarations
/* none */

class KeywordWidgetCharString : public QComboBox
{
	// All Qt declarations must include this macro
	Q_OBJECT

	public:
	// Constructor
	KeywordWidgetCharString(QWidget* parent, ModuleKeywordBase* keyword) : QComboBox(parent)
	{
		// Cast the pointer up into the parent class type
		keyword_ = dynamic_cast<CharStringModuleKeyword*>(keyword);
		if (!keyword_) Messenger::error("Couldn't cast base module keyword into CharStringModuleKeyword.\n");
		else
		{
			// Set allowed values
			if (keyword_->hasValidationList())
			{
				// Populate the combo with the allowed values
				const Array<CharString>& items = keyword_->validationList();
				for (int n=0; n<items.nItems(); ++n) addItem(items.value(n).get());

				// Turn off editability
				setEditable(false);

				// Set the current value
				setCurrentIndex(keyword_->indexOfValid(keyword_->asString()));
			}
			else
			{
			}
		}

		// Connect the 
		connect(this, SIGNAL(currentTextChanged(QString)), this, SLOT(myCurrentTextChanged(QString)));
	}


	/*
	 * Keyword
	 */
	private:
	// Associated keyword
	CharStringModuleKeyword* keyword_;


	/*
	 * Slots
	 */
	private slots:
	// Combo box text changed
	void myCurrentTextChanged(const QString& text)
	{
		keyword_->setData(qPrintable(text));
	}
};

#endif
