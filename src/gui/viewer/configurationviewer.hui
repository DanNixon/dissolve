/*
	*** Configuration Viewer
	*** src/gui/viewer/configurationviewer.hui
	Copyright T. Youngs 2012-2013

	This file is part of Dissolve.

	Dissolve is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Dissolve is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Dissolve.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef DISSOLVE_CONFIGURATIONVIEWER_H
#define DISSOLVE_CONFIGURATIONVIEWER_H

#include "gui/viewer/viewer.hui"

// Forward Declarations
class Configuration;

// Configuration Rendering Widget
class ConfigurationViewer : public Viewer
{
	Q_OBJECT

	public:
	// Constructor / Destructor
	ConfigurationViewer(QWidget *parent);
	~ConfigurationViewer();


	/*
	// Mouse / Keyboard Input
	*/
	protected:
	// Qt Virtual (mouse press event)
	void mousePressEvent(QMouseEvent*);
	// Qt Virtual (mouse release event)
	void mouseReleaseEvent(QMouseEvent*);
	// Qt Virtual (mouse move event)
	void mouseMoveEvent(QMouseEvent*);
	// Qt Virtual (mouse wheel event)
	void wheelEvent(QWheelEvent*);


	/*
	 * Rendering Callbacks / Data
	 */
	protected:
	// Create necessary primitives (called once when Viewer is constructed)
	void createPrimitives();
	// Setup basic GL properties
	void setupGL();
	// Draw source Species
	void drawScene();
	
	/*
	// Custom Data
	*/
	public:
	/// Draw Style enum
	enum DrawStyle
	{
		PointStyle,		/**> Draw source Species/Configuration with points (atoms only) */
		LineStyle,		/**> Draw source Species/Configuration with lines */
		BallAndStickStyle,	/**> Draw source Species/Configuration with balls and sticks */
		nDrawStyles		/**> Number of drawing styles */
	};
	
	private:
	// Source Configuration to display
	Configuration* sourceConfiguration_;
	// Selection box (if any)
	QRect selectionBox_;
	// Basic primtives
	Primitive spherePrimitive03_, spherePrimitive04_, cubePrimitive_, wireCubePrimitive_, cylinderPrimitive_;
	// Style in which to draw source
	ConfigurationViewer::DrawStyle drawStyle_;

	public:
	// Set source (Configuration)
	void setSource(Configuration *cfg);
	// Set draw style
	void setDrawStyle(ConfigurationViewer::DrawStyle style);
	
	public slots:
	// Change draw style
	void changeDrawStyle(int style);
};

#endif
