/*
	*** Species Viewer
	*** src/gui/viewer/speciesviewer.uih
	Copyright T. Youngs 2019

	This file is part of Dissolve.

	Dissolve is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Dissolve is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Dissolve.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef DISSOLVE_SPECIESVIEWER_H
#define DISSOLVE_SPECIESVIEWER_H

#include "gui/viewer/viewer.hui"

// Forward Declarations
class Species;

// Species Rendering Widget
class SpeciesViewer : public BaseViewer
{
	Q_OBJECT

	public:
	// Constructor / Destructor
	SpeciesViewer(QWidget *parent);
	~SpeciesViewer();


	/*
	 * Rendering (BaseViewer virtuals)
	 */
	private:
	// Perform post-initialisation operations
	void postInitialiseGL();
	// Perform post-resize operations
	void postResizeGL();
	// Render 2D overlay content
	void render2DOverlay();


	/*
	 * Mouse / Keyboard Input (BaseViewer virtuals)
	 */
	protected:
	// Mouse moved
	void mouseMoved(int dx, int dy, Qt::KeyboardModifiers modifiers);
	// Mouse 'wheeled'
	void mouseWheeled(int delta);
	// Mouse double clicked
	void mouseDoubleClicked();
	// Key pressed
	bool keyPressed(int key, Qt::KeyboardModifiers modifiers);
	// Key released
	bool keyReleased(int key, Qt::KeyboardModifiers modifiers);


	/*
	 * Interaction (BaseViewer virtuals)
	 */
	public:
	// Interaction Mode enum
	enum InteractionMode
	{
		DefaultInteraction,
		SelectAreaInteraction,
		TranslateViewInteraction,
		RotateViewInteraction,
		nInteractionModes
	};

	private:
	// Current interaction mode
	InteractionMode interactionMode_;

	protected:
	// Return current interaction mode
	int interactionMode() const;
	// Start interaction at the specified screen coordinates
	void startInteraction(Qt::KeyboardModifiers modifiers);
	// End interaction at the specified screen coordinates
	void endInteraction();
	// Cancel current interaction
	void cancelInteraction();


	/*
	 * Context Menu (BaseViewer virtuals)
	 */
	private:
	// Special QMenu items
	QMenu* currentDataMenu_;

	private:
	// Initialise context menu
	void initialiseContextMenu();
	// Update dynamic aspects of context menu before display
	void updateContextMenu();


	/*
	 * Source Species
	 */
	private:
	// Source Species to display
	Species* species_;

	public:
	// Set target Species
	void setSpecies(Species* sp);


	/*
	 * Custom Data
	 */
	public:
	// Draw Style
	enum DrawStyle
	{
		PointStyle,		/* Draw source Species/Configuration with points (atoms only) */
		LineStyle,		/* Draw source Species/Configuration with lines */
		BallAndStickStyle,	/* Draw source Species/Configuration with balls and sticks */
		nDrawStyles		/* Number of drawing styles */
	};
	
	private:
	// Style in which to draw source
	SpeciesViewer::DrawStyle drawStyle_;

	public:
	// Set draw style
	void setDrawStyle(SpeciesViewer::DrawStyle style);
};

#endif
