/*
	*** Data Viewer Widget
	*** src/gui/viewer/dataviewer.hui
	Copyright T. Youngs 2013-2019

	This file is part of uChroma.

	uChroma is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	uChroma is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with uChroma.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef DISSOLVE_DATAVIEWER_H
#define DISSOLVE_DATAVIEWER_H

#include "gui/viewer/viewer.hui"

// Forward Declarations
/* none */

// Data Viewer
class DataViewer : public BaseViewer
{
	Q_OBJECT

	public:
	// Constructor / Destructor
	DataViewer(QWidget *parent);
	~DataViewer();


	/*
	 * Scene Rendering
	 */
	private:
	// Setup basic GL properties
	void setupGL();
	// Draw full scene
	void renderFullScene(int xOffset = 0, int yOffset = 0);


	/*
	 * Mouse / Keyboard Input
	 * (in viewer_input.cpp)
	 */
	protected:
	// Mouse press event
	void mousePressEvent(QMouseEvent* event);
	// Mouse release event
	void mouseReleaseEvent(QMouseEvent* event);
	// Mouse move event
	void mouseMoveEvent(QMouseEvent* event);
	// Mouse wheel event
	void wheelEvent(QWheelEvent* event);
	// Mouse double click event
	void mouseDoubleClickEvent(QMouseEvent* event);

	public slots:
	// Key press event
	void keyPressEvent(QKeyEvent*);
	// Key release event
	void keyReleaseEvent(QKeyEvent*);


	/*
	 * Context Menu
	 * (in viewer_context.cpp)
	 */
	private:
	// Context menu for display
	QMenu contextMenu_;
	// Special QActions
	QAction* currentPaneAction_;
	// Special QMenu items
	QMenu* currentCollectionsMenu_;

	private:
	// Initialise context menu
	void initialiseContextMenu();
	// Update dynamic aspects of context menu before display
	void updateContextMenu();

	private slots:
	// Show dialog
	void showDialog(bool checked);
	// Set display status of Collection target
	void setCollectionDisplayed(bool checked);
	// Copy current view image to clipboard
	void copyViewToClipboard(bool checked);

	public slots:
	// Show context menu
	void showContextMenu(const QPoint& pos);
};

#endif
