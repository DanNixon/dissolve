#!/bin/bash

# Enforce verbosity for commands and exit on first failure
set -ev

# Source the new Qt installation
# - Copied from /opt/qt512/bin/qt512-env.sh
QT_BASE_DIR=/opt/qt512
export QTDIR=$QT_BASE_DIR
export PATH=$QT_BASE_DIR/bin:$PATH

if [[ $(uname -m) == "x86_64" ]]; then
  export LD_LIBRARY_PATH=$QT_BASE_DIR/lib/x86_64-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
else
  export LD_LIBRARY_PATH=$QT_BASE_DIR/lib/i386-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
fi

export PKG_CONFIG_PATH=$QT_BASE_DIR/lib/pkgconfig:$PKG_CONFIG_PATH

# Execute autogen.sh
./autogen.sh

# Configure the build
# - On Ubuntu, need to specify executable names for Qt tools
./configure --with-gui --with-qtmoc=moc --with-qtrcc=rcc --with-qtuic=uic

# Make
make

# Retrieve appimage build script
wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/build-appimage.sh -O build-appimage.sh
chmod u+x build-appimage.sh

# Get current program version that we're building
VERSION=`grep "DISSOLVEVERSION" src/version.h | sed "s/.*\"\(.*\)\"/\1/g"`

# Build AppImage for serial version
./build-appimage.sh -a Dissolve-Serial -v ${VERSION} -b src/dissolve-serial

# Build AppImage for GUI
./build-appimage.sh -a Dissolve-GUI -v ${VERSION} -b src/dissolve-gui

# Store artifacts (the dir will have been created already by Travis)
cp Dissolve*.AppImage artifacts/
