# Set language for the project
language: cpp

# Package dependencies
addons:
  apt:
    packages:
      - bison
      - libfreetype6-dev
      - libftgl-dev
      - pkg-config
      - libtool
      - automake
      - libopenmpi-dev
      - openmpi-bin
      - ninja-build
      - cmake
  homebrew:
    update: true
    packages:
      - bison
      - ftgl
      - ninja
      - create-dmg

services:
  - docker

# Add updated Qt libs (serial build only)
before_install:
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$PARALLEL" = "false" ]]; then sudo add-apt-repository ppa:beineri/opt-qt-5.12.3-xenial -y; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$PARALLEL" = "false" ]]; then sudo apt-get update -q; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$PARALLEL" = "false" ]]; then sudo apt-get install qt512base -y; fi
  - if [[ "$TRAVIS_OS_NAME" = "osx" && "$PARALLEL" = "false" ]]; then brew install qt5; fi
  - if [[ "$TRAVIS_OS_NAME" = "osx" && "$PARALLEL" = "true" ]]; then brew install open-mpi; fi

# Build Stages
jobs:
  include:
    - stage: OSX Build / Deploy
      name: Serial, GUI
      env: PARALLEL=false
      os: osx
      cache:
        directories:
          - artifacts
      script:
        - echo 'USECREATEDMG="TRUE"' >> ci/osx/dissolve-gui.dmginfo
        - ./ci/osx/build.serial.gui
      deploy:
        provider: script
        skip_cleanup: true
        on:
          all_branches: true
        script: mv artifacts/Dissolve-GUI-0.5.4.dmg artifacts/Dissolve-GUI-0.5.4-HighSierra.dmg && ./ci/scripts/update-release -r trisyoungs/dissolve -t continuousHS -n "Continuous Build for High Sierra" -b "Continuous release from current \`develop\` branch (Travis-CI)." -p artifacts/*dmg
    - stage: Windows Build
      if: branch = FAKEBRANCH
      name: Serial, GUI
      env: PARALLEL=false
      os: windows
      script:
        - powershell -NoProfile -ExecutionPolicy Bypass ci/windows/build.serial.gui.qt5.ps1
        - powershell -NoProfile -ExecutionPolicy Bypass ci/windows/build.serial.gui.prereq.ps1
        - powershell -NoProfile -ExecutionPolicy Bypass ci/windows/build.serial.gui.freetype.ps1
        - powershell -NoProfile -ExecutionPolicy Bypass ci/windows/build.serial.gui.ftgl.ps1
        - powershell -NoProfile -ExecutionPolicy Bypass ci/windows/build.serial.gui.ps1
    - stage: Linux Build
      if: branch = FAKEBRANCH
      name: Serial, GUI
      env: PARALLEL=false
      os: linux
      cache:
        directories:
          - artifacts
      script: ./ci/ubuntu/build.serial.gui
    - stage: Linux Build
      if: branch = FAKEBRANCH
      name: Parallel
      env: PARALLEL=true
      os: linux
      cache:
        directories:
          - artifacts
      script: ./ci/ubuntu/build.parallel
    - stage: Linux Test / Deploy
      if: branch = FAKEBRANCH
      name: Serial (also deploys GUI)
      env: PARALLEL=false
      os: linux
      cache:
        directories:
          - artifacts
      script: ./ci/ubuntu/test.serial
      before_deploy:
        - wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/travis-deploy -O travis-deploy
        - chmod u+x ./travis-deploy
      deploy:
        provider: script
        skip_cleanup: true
        on:
          all_branches: true
        script: ./travis-deploy -n "Release ${TRAVIS_TAG}" -f Recent.md -w artifacts/*AppImage
    - stage: Linux Test / Deploy
      if: branch = FAKEBRANCH
      name: Parallel
      env: PARALLEL=true
      os: linux
      cache:
        directories:
          - artifacts
      script: ./ci/ubuntu/test.parallel
      before_deploy:
        - wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/travis-deploy -O travis-deploy
        - chmod u+x ./travis-deploy
      deploy:
        provider: script
        skip_cleanup: true
        on:
          all_branches: true
        script: ./travis-deploy -n "Release ${TRAVIS_TAG}" -f Recent.md -w artifacts/*AppImage
    - stage: OSX Build / Deploy
      if: branch = FAKEBRANCH
      name: Parallel
      env: PARALLEL=true
      os: osx
      cache:
        directories:
          - artifacts
      script: ./ci/osx.highsierra/build.parallel
      before_deploy:
        - wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/travis-deploy -O travis-deploy
        - chmod u+x ./travis-deploy
      deploy:
        provider: script
        skip_cleanup: true
        on:
          all_branches: true
        script: ./travis-deploy -n "Release ${TRAVIS_TAG}" -f Recent.md -w artifacts/Dissolve*dmg

# Branch Safelist (allow only develop and version-tagged builds)
branches:
  only:
    - develop
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

# Build Stage Order
stages:
  - OSX Build / Deploy
  - Linux Build
  - Linux Test / Deploy
  - Windows Build
