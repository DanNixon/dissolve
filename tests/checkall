#!/bin/bash -l

# Run and check all tests

NFAILED=0
EXITONFAIL="TRUE"

# Set path to binary and data and check that it exists
while getopts "a" op
do
  case $op in
    a ) EXITONFAIL="FALSE"
        echo "Run all tests, regardless of the success or failure of each test.";;
    \? ) echo "Error: Unrecognised switch '$op'"
         exit 1;;
    * ) echo "Error: Extra operands given."
        echo -e $USAGE
        exit 1;;
  esac
done

DUQ=../src/duq
export DUQDATA=../../data
if [ ! -e $DUQ ]
then
	echo "Couldn't find binary."
	exit 1
fi

# Do we have a parallel exe?
PARALLEL="FALSE"
PROCS="1 2 3 4"
if $DUQ -h | grep -c "MPI" >& /dev/null
then
	echo "Parallel version available - checks will be performed over ($PROCS) processes."
	PARALLEL="TRUE"
else
	echo "Tests will be performed in serial mode."
	PROCS="1"
fi

# Loop over all test directories, or supplied dirs
if [ "$#" -eq "0" ]
then
  TESTS=`ls -d [0-9]*[0-9]`
else
  TESTS="$*"
fi
for test in $TESTS
do
	echo "Test directory: "$test

	# Descend into test directory, and print out first two lines from README (containing description of test)
	cd $test
	if [ -e README ]
	then
	  head -n2 README
	else
	  echo "<<< No README file in this directory >>>"
	fi

	# Loop over all input files (*.txt)
	for input in *.txt
	do
		for nprocs in $PROCS
		do
			# Set output filename path
			if [ "$nprocs" -eq "1" ]
			then
				output=../${test}.${input%.txt}.out
				echo -e "\nRunning test \"${input}\" (serial)..."
				../$DUQ $input > $output
			else
				output=../${test}.${input%.txt}.${nprocs}.out
				echo -e "\nRunning test \"${input}\" (${nprocs} processes)..."
				mpirun -np $nprocs ../$DUQ $input -r $output > $output
			fi

			if [ "$?" -eq "0" ]
			then
				echo "Success!"
			else
				echo "*****************"
				echo "*  TEST FAILED  *"
				echo "*****************"
				echo "==> Check output file $output"
				NFAILED=$(( NFAILED+1 ))

				# Exit early?
				if [ "$EXITONFAIL" = "TRUE" ]
				then
					exit 1
				fi
			fi

		done
	done

	# Done, so move up to base test directory
	cd ../
	echo ""
done

# Did we have any failures

if [ "$NFAILED" -gt "0" ]
then
	echo -e "\nOne or more tests failed.\n"
	exit 1
fi

exit 0
